version: '3.5'
services:
  # ganachecli: simulated test rpc on dev environment
  ganache:
    container_name: ganache
    hostname: ganache
    image: trufflesuite/ganache-cli
    ports:
      - 8545:8545
    command: >
      ganache-cli -m mnemonic
    networks:
      - container-link    
  contracts:
    depends_on:
      - ganache
    container_name: contracts
    hostname: contracts
    image: wearekickback/contracts
    command: >
      bash -c "
      /usr/local/bin/wait-for-it.sh ganache:8545
      && yarn truffle migrate --network docker 
      && cd /kickback/kickback-subgraph 
      && yarn codegen
      && /usr/local/bin/wait-for-it.sh graph:8020
      && yarn graph create wearekickback/kickback --node http://graph:8020/ wearekickback/kickback 
      && /usr/local/bin/wait-for-it.sh ipfs:5001
      && graph deploy --node http://graph:8020/ --ipfs http://ipfs:5001 wearekickback/kickback
      "
    tty: true
    networks:
      - container-link
    volumes:
      - ./docker/app:/app
      - ./docker/server:/server
  graph:
    container_name: graph
    hostname: graph
    image: graphprotocol/graph-node
    networks:
      - container-link
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres:5432
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:http://ganache:8545'
      RUST_LOG: info
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'
    networks:
      - container-link
    volumes:
      - ./data/ipfs:/data/ipfs
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    networks:
      - container-link
    command: ['postgres', '-cshared_preload_libraries=pg_stat_statements']
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
networks:
  default:
    external:
      name: bridge
  container-link: